2015-09-10 Thurs
Aim: Time to C what we can do.

Do Now: What command line programs would do the following?
	(always assume you are starting at your home directory)
	
	1) Move foo.java from Desktop/ to Documents/
	2) Remove all .class files
	3) Connect to lisa.stuy.edu from someplace else
	4) Figure out what gcc does
	5) Copy woohoo.c from your home directory to a /code/ directory on homer (assume you are not working on homer itself)



2015-09-11 Fri
Aim: C what I did there?

Do now:

	From yesterday:
		4) Figure out what gcc does
		5) Copy woohoo.c from your home directory to a /code/ directory on homer (assume you are not working on homer itself)
		
	Today:
		List the Java primitive variable types
		* byte
		* short
		* int
		* long
		* float
		* double
		* boolean
		* char
		
	Last Class Today!
	
		Every day, 1 student will be chosen at random to provide a recap of the previous day's class.
		
		That evening, the same person will be responsible for posting the notes to the class Piazza page. Make sure to tag the note as "last class today".
		
			Title the note LCT <MM/DD WEEKDAY>
			For example: LCT 9/10 Thursday
			
			Also include at the end of the note a link to an interesting piece of tech/science news.



2015-09-16 Wed
Aim: Variables are the spice of life.

Do Now: What is the smallest variable type that could be used to store the following values (using standard sizes)?

	1) 5				byte
	2) -30,000			short
	3) 255				short
	4) 5,000,000,000	float
	
C Primitive Variable Types
	
	All C primitives are numeric.
	
	The only difference is floating point vs. integer and size of variable.
	
	Size can be platform dependent.
		sizeof(<TYPE>) can be used to find the size in bytes.
		
		sizeof(int)
		
	Types	Standard Size (bytes)
	int			4
	short		2
	long		8
	float		4
	double		8
	char		1
	
	All boolean values are numbers:
		0  == false
		!0 == true
		
		YOU WILL ALL MAKE THIS MISTAKE:
			if(x = 6) {…}



2015-09-17 Thurs
Aim: Always read the fine print.

Do Now: Open up your editor of choice (Emacs), write a basic "Hello, world!" program in Java.

Data Types and Variables
	
	Character literals are single characters inside ''.
		e.g., 'a', '*'
	
	String literals exist, even though there is no string data type.
		e.g., "hello", "you smell"
	
	Any variable type can be decalred an "unsigned" variable. This signifies the variable will never be negative.
		The lower bound of any unsigned variable is 0.
		The upper bound will be greater than the signed version.
		
		e.g.	unsigned char x;
				0 <= x <= 255



2015-09-18 Fri
SoTD: "Superstitious" — Stevie Wonder
Aim: A vast array of possibilities.

Do Now: How do you declare/use arrays in Java?

Mentioned:
$ echo $PATH
$ which emacs

plus C funsies



2015-09-22 Tues
SoTD: "Hunger Strike" — Temple of the Dog
Aim: What's the point of it all?

Memory management
	
	Memory allocation happens either at compile time or at run time (dynamic).
	
	Compiler Allocated Memory (Stack)
		Packaged with the binary of the program
		
		There is no standard default value
		
		Variables and arrays qare allocated here
			e.g., float a		int b[5]
		
		Arrays
			Are not dynamic
			
			Must have a fixed size
			
			There is no length function
			
			There is no boundary checking
	
	Heap Allocated Memory (Java keyword new)
	

2015-09-25 Fri
SoTD: "Here Comes the Hotstepper" — Ini Kamoze
Aim: Ok, now we're really going to get to the point.

int fred;
fred is a placeholder pointing to a value in memory (an address in memory containing some information)

Pointers — the fun really starts
	
	Variables designed to store memory addresses (think references in Java)
	
	& is used to get the address of a variable
	
	* is used to declare a variable as a pointer type
		e.g., int *p, double *q, char *r …
	
	* is also used as the de-reference operator
		It accesses the value at the memory location stored in a pointer



2015-09-28 Mon
SoTD: "Lump" — The Presidents of the United States of America
Aim: Ok, now we're really going to get to the point.

Do Now:
	1) Declare int, double, and char variables.
	2) Declare int, double, and char pointers.
	3) Initialize each pointer to the address of the corresponding variable.
	4) Print out the pointer's value for each (as an unsigned long).
	5) Add 1 to each pointer.
	6) Print out the pointers again.
	What happened?



2015-09-29 Tues
SoTD: "In the Meantime" — Spacehog
Aim: Time to stop stringing you along.

float fray[5]; // f-array, or f-ray
float *fp = fray;

C strings (ctrings)
	
	Strings are character arrays that end with a null character (either '' or 0 f '\0').
	The terminating null character is a convention. String functions will not work correctly without it.
	The following are valid ways to declare strings:
		
		char s[256]
			Normal array declaration, allocates 256 bytes, nothing is set automatically
		
		char s[256] = "Imagine";
			Allocates 256 bytes, puts "Imagine" in the first 7 bytes and adds a null at the 8th byte


2015-09-30 Wed
